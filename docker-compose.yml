version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 5s
      timeout: 30s
      retries: 5

    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  web:
    build: .
    volumes:
      - .:/app
    ports:
      - "8000:8000"
      - "5678:5678"
    depends_on:
      postgres:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  celery:
    build: .
    container_name: celery_worker
    command: ["poetry", "run", "celery", "-A", "core", "worker", "--loglevel=info"]
    depends_on:
      - redis
      - web
    env_file:
      - .env

  beat:
    build: .
    container_name: celery_beat
    command: ["poetry", "run", "celery", "-A", "core", "beat", "--loglevel=info"]
    depends_on:
      - redis
      - web
      - celery
    env_file:
      - .env
volumes:
  postgres_data:
  elasticsearch_data:
